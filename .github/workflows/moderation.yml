name: Moderate PR

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  pr_comment:
    runs-on: ubuntu-latest

    steps:
      - name: Initial Logging
        run: |
          echo "Initializing moderation process..."
          echo "System check: $(uname -a)"
          echo "Environment variables loaded successfully."

      - name: Get the list of banned words
        run: |
          curl -L -o bad_words_list.txt https://raw.githubusercontent.com/leereilly/list-of-english-cliches/main/cliches.txt
          echo "Banned words list downloaded."

      - name: Hashing banned words
        env:
          SEVERITY_MODE: ${{ secrets.SEVERITY_MODE }}
        run: |
          head -n 5 bad_words_list.txt | while read -r line; do
            HASH=$(echo -n "$line" | sha256sum | awk '{print $1}')
            echo "$HASH" >> banned_words_hash.txt
          done
          echo "SECURITY_HASH=sha256" >> $GITHUB_ENV

      - name: Check the comment
        env:
          CTF_FLAG: ${{ secrets.CTF_FLAG }}
        id: check_comment
        run: |
          echo "Checking the following comment..."
          echo "${{ github.event.comment.body }}" 

          COMMENT_HASH=$(echo -n "${{ github.event.comment.body }}" | sha256sum | awk '{print $1}')
          echo "Computed comment hash: $COMMENT_HASH"

          COMMENT_SAFE='true'
          while read -r BANNED_HASH; do
            if [[ "$COMMENT_HASH" == "$BANNED_HASH" ]]; then
              echo "Comment contains banned word!"
              COMMENT_SAFE='false'
              break
            fi
          done < banned_words_hash.txt

          echo "::set-output name=comment_safe::$COMMENT_SAFE"
          echo "::set-output name=flag::$CTF_FLAG" # Exposes the CTF_FLAG secret safely for later use

      - name: Print CTF_FLAG (Debugging)
        if: always()
        run: |
          echo "CTF_FLAG value: ${{ steps.check_comment.outputs.flag }}"

      - name: Delete PR Comment (if needed)
        if: steps.check_comment.outputs.comment_safe == 'false'
        uses: actions/github-script@v7.0.1
        env:
          COMMENT_ID: ${{ github.event.comment.id }}
          CTF_FLAG: ${{ secrets.CTF_FLAG }}
        with:
          script: |
            const repo = context.payload.repository.name;
            const owner = context.payload.repository.owner.login;
            const comment_id = process.env.COMMENT_ID;
            const flag = process.env.CTF_FLAG;

            if (!comment_id) {
              console.log("Comment ID is undefined. Skipping deletion.");
              return;
            }

            console.log(`CTF_FLAG value: ${flag}`); // Debugging: REMOVE this line in production

            console.log("Comment flagged as inappropriate. Removing...");
            await github.rest.issues.deleteComment({
              owner,
              repo,
              comment_id,
            });
